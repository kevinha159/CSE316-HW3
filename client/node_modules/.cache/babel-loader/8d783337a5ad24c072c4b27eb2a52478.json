{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/Documents/CSE316/playerlister-hw3/Playlister_HW3/client/src/components/ListCard.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { GlobalStoreContext } from '../store';\nimport DeleteListModal from './DeleteListModal';\nimport { useFetch } from \"react-async\";\n/*\n    This is a card in our list of playlists. It lets select\n    a list for editing and it has controls for changing its \n    name or deleting it.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListCard(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [editActive, setEditActive] = useState(false);\n  const {\n    data,\n    error\n  } = useFetch(store.getPlaylistById());\n  const [text, setText] = useState(\"\");\n  store.history = useHistory();\n  const {\n    idNamePair,\n    selected\n  } = props;\n\n  function handleLoadList(event) {\n    if (!event.target.disabled) {\n      let _id = event.target.id;\n      if (_id.indexOf('list-card-text-') >= 0) _id = (\"\" + _id).substring(\"list-card-text-\".length); // CHANGE THE CURRENT LIST\n\n      store.setCurrentList(_id);\n    }\n  }\n\n  function handleToggleEdit(event) {\n    event.stopPropagation();\n    toggleEdit();\n  }\n\n  function toggleEdit() {\n    let newActive = !editActive;\n\n    if (newActive) {\n      store.setIsListNameEditActive();\n    }\n\n    setEditActive(newActive);\n  }\n\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {\n      let id = event.target.id.substring(\"list-\".length);\n      store.changeListName(id, text);\n      toggleEdit();\n    }\n  }\n\n  function handleUpdateText(event) {\n    setText(event.target.value);\n  }\n\n  function handleDeleteList(event) {\n    // console.log(idNamePair)\n    event.stopPropagation();\n    console.log(idNamePair._id);\n    store.showDeleteListModal();\n  }\n\n  let selectClass = \"unselected-list-card\";\n\n  if (selected) {\n    selectClass = \"selected-list-card\";\n  }\n\n  let cardStatus = false;\n\n  if (store.isListNameEditActive) {\n    cardStatus = true;\n  }\n\n  function getPlaylist() {\n    async function asyncGetPlaylist() {\n      let res = await store.getPlaylistById(idNamePair._id);\n      console.log(res);\n\n      if (res.data.success) {\n        let playlist = res.data.playlist;\n        return playlist;\n      }\n    }\n\n    asyncGetPlaylist();\n  }\n\n  store.getPlaylistById(idNamePair._id).then(() => {}); // console.log(getPlaylist());\n\n  let cardElement = /*#__PURE__*/_jsxDEV(\"div\", {\n    id: idNamePair._id,\n    onClick: handleLoadList,\n    className: 'list-card ' + selectClass,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"list-card-text-\" + idNamePair._id,\n      className: \"list-card-text\",\n      children: idNamePair.name\n    }, \"span-\" + idNamePair._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      disabled: cardStatus,\n      type: \"button\",\n      id: \"delete-list-\" + idNamePair._id,\n      className: \"list-card-button\",\n      value: \"\\u2715\",\n      onClick: handleDeleteList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      disabled: cardStatus,\n      type: \"button\",\n      id: \"edit-list-\" + idNamePair._id,\n      className: \"list-card-button\",\n      onClick: handleToggleEdit,\n      value: \"\\u270E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DeleteListModal // name={}\n    , {\n      hideDeleteListModalCallback: store.hideDeleteListModal // deleteListCallback={this.deleteMarkedList}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, idNamePair._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n\n  if (editActive) {\n    cardElement = /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"list-\" + idNamePair._id,\n      className: \"list-card\",\n      type: \"text\",\n      onKeyPress: handleKeyPress,\n      onChange: handleUpdateText,\n      defaultValue: idNamePair.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this);\n  }\n\n  return cardElement;\n}\n\n_s(ListCard, \"7/n4D/hAj395fdgJTGouSUR2ryY=\", false, function () {\n  return [useFetch, useHistory];\n});\n\n_c = ListCard;\nexport default ListCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListCard\");","map":{"version":3,"sources":["/Users/kevin/Documents/CSE316/playerlister-hw3/Playlister_HW3/client/src/components/ListCard.js"],"names":["useContext","useState","useHistory","GlobalStoreContext","DeleteListModal","useFetch","ListCard","props","store","editActive","setEditActive","data","error","getPlaylistById","text","setText","history","idNamePair","selected","handleLoadList","event","target","disabled","_id","id","indexOf","substring","length","setCurrentList","handleToggleEdit","stopPropagation","toggleEdit","newActive","setIsListNameEditActive","handleKeyPress","code","changeListName","handleUpdateText","value","handleDeleteList","console","log","showDeleteListModal","selectClass","cardStatus","isListNameEditActive","getPlaylist","asyncGetPlaylist","res","success","playlist","then","cardElement","name","hideDeleteListModal"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { GlobalStoreContext } from '../store'\nimport DeleteListModal from './DeleteListModal';\nimport { useFetch } from \"react-async\"\n/*\n    This is a card in our list of playlists. It lets select\n    a list for editing and it has controls for changing its \n    name or deleting it.\n    \n    @author McKilla Gorilla\n*/\nfunction ListCard(props) {\n    const { store } = useContext(GlobalStoreContext);\n    const [ editActive, setEditActive ] = useState(false);\n    const {data, error} = useFetch(store.getPlaylistById())\n    const [ text, setText ] = useState(\"\");\n    store.history = useHistory();\n    const { idNamePair, selected } = props;\n\n    function handleLoadList(event) {\n        if (!event.target.disabled) {\n            let _id = event.target.id;\n            if (_id.indexOf('list-card-text-') >= 0)\n                _id = (\"\" + _id).substring(\"list-card-text-\".length);\n\n            // CHANGE THE CURRENT LIST\n            store.setCurrentList(_id);\n        }\n    }\n\n    function handleToggleEdit(event) {\n        event.stopPropagation();\n        toggleEdit();\n    }\n\n    function toggleEdit() {\n        let newActive = !editActive;\n        if (newActive) {\n            store.setIsListNameEditActive();\n        }\n        setEditActive(newActive);\n    }\n\n    function handleKeyPress(event) {\n        if (event.code === \"Enter\") {\n            let id = event.target.id.substring(\"list-\".length);\n            store.changeListName(id, text);\n            toggleEdit();\n        }\n    }\n    function handleUpdateText(event) {\n        setText(event.target.value );\n    }\n\n    function handleDeleteList(event){\n        // console.log(idNamePair)\n        event.stopPropagation();\n        console.log(idNamePair._id);\n        store.showDeleteListModal();\n    }\n\n    let selectClass = \"unselected-list-card\";\n    if (selected) {\n        selectClass = \"selected-list-card\";\n    }\n    let cardStatus = false;\n    if (store.isListNameEditActive) {\n        cardStatus = true;\n    }\n    function getPlaylist(){\n        async function asyncGetPlaylist(){\n            let res = await store.getPlaylistById(idNamePair._id);\n            console.log(res);\n            if (res.data.success) {\n                let playlist = res.data.playlist;\n                return playlist;\n            }\n        }\n        asyncGetPlaylist();\n    }\n    store.getPlaylistById(idNamePair._id).then(() => {\n        \n    })\n    // console.log(getPlaylist());\n    let cardElement =\n        <div\n            id={idNamePair._id}\n            key={idNamePair._id}\n            onClick={handleLoadList}\n            className={'list-card ' + selectClass}>\n            <span\n                id={\"list-card-text-\" + idNamePair._id}\n                key={\"span-\" + idNamePair._id}\n                className=\"list-card-text\">\n                {idNamePair.name}\n            </span>\n            <input\n                disabled={cardStatus}\n                type=\"button\"\n                id={\"delete-list-\" + idNamePair._id}\n                className=\"list-card-button\"\n                value={\"\\u2715\"}\n                onClick={handleDeleteList}\n            />\n            <input\n                disabled={cardStatus}\n                type=\"button\"\n                id={\"edit-list-\" + idNamePair._id}\n                className=\"list-card-button\"\n                onClick={handleToggleEdit}\n                value={\"\\u270E\"}\n            />\n            <DeleteListModal\n                // name={}\n                hideDeleteListModalCallback={store.hideDeleteListModal}\n                // deleteListCallback={this.deleteMarkedList}\n            />\n        </div>;\n\n    if (editActive) {\n        cardElement =\n            <input\n                id={\"list-\" + idNamePair._id}\n                className='list-card'\n                type='text'\n                onKeyPress={handleKeyPress}\n                onChange={handleUpdateText}\n                defaultValue={idNamePair.name}\n            />;\n    }\n    return (\n        cardElement\n    );\n}\n\nexport default ListCard;"]},"metadata":{},"sourceType":"module"}