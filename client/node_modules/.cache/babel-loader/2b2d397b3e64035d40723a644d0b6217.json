{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/Documents/CSE316/playerlister-hw3/Playlister_HW3/client/src/components/PlaylistCards.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport SongCard from './SongCard.js';\nimport { GlobalStoreContext } from '../store';\n/*\n    This React component lets us edit a loaded list, which only\n    happens when we are on the proper route.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlaylistCards() {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  store.history = useHistory();\n\n  if (store.currentList !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"playlist-cards\",\n      children: store.currentList.songs.map((song, index) => /*#__PURE__*/_jsxDEV(SongCard, {\n        id: 'playlist-song-' + index,\n        index: index,\n        song: song\n      }, 'playlist-song-' + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"playlist-cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(PlaylistCards, \"4OxDS/MBxgihbUmN8AlIaPl6MU0=\", false, function () {\n  return [useHistory];\n});\n\n_c = PlaylistCards;\nexport default PlaylistCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaylistCards\");","map":{"version":3,"sources":["/Users/kevin/Documents/CSE316/playerlister-hw3/Playlister_HW3/client/src/components/PlaylistCards.js"],"names":["useContext","useHistory","SongCard","GlobalStoreContext","PlaylistCards","store","history","currentList","songs","map","song","index"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,aAAT,GAAyB;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAYL,UAAU,CAACG,kBAAD,CAA5B;AACAE,EAAAA,KAAK,CAACC,OAAN,GAAgBL,UAAU,EAA1B;;AACA,MAAGI,KAAK,CAACE,WAAN,KAAsB,IAAzB,EAA8B;AAC1B,wBACI;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA,gBAEIF,KAAK,CAACE,WAAN,CAAkBC,KAAlB,CAAwBC,GAAxB,CAA4B,CAACC,IAAD,EAAOC,KAAP,kBACxB,QAAC,QAAD;AACI,QAAA,EAAE,EAAE,mBAAoBA,KAD5B;AAGI,QAAA,KAAK,EAAEA,KAHX;AAII,QAAA,IAAI,EAAED;AAJV,SAES,mBAAoBC,KAF7B;AAAA;AAAA;AAAA;AAAA,cADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH,GAfD,MAeK;AACD,wBAAO;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AAEJ;;GAtBQP,a;UAEWH,U;;;KAFXG,a;AAwBT,eAAeA,aAAf","sourcesContent":["import { useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport SongCard from './SongCard.js'\nimport { GlobalStoreContext } from '../store'\n/*\n    This React component lets us edit a loaded list, which only\n    happens when we are on the proper route.\n    \n    @author McKilla Gorilla\n*/\nfunction PlaylistCards() {\n    const { store } = useContext(GlobalStoreContext);\n    store.history = useHistory();\n    if(store.currentList !== null){\n        return (\n            <div id=\"playlist-cards\">\n            {\n                store.currentList.songs.map((song, index) => (\n                    <SongCard\n                        id={'playlist-song-' + (index)}\n                        key={'playlist-song-' + (index)}\n                        index={index}\n                        song={song}\n                    />\n                ))\n            }\n            </div>\n        )\n    }else{\n        return(<div id=\"playlist-cards\"></div>)\n    }\n\n}\n\nexport default PlaylistCards;"]},"metadata":{},"sourceType":"module"}