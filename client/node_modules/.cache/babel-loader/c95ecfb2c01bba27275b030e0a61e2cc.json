{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/Documents/CSE316/playerlister-hw3/Playlister_HW3/client/src/components/EditToolbar.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport { useHistory } from 'react-router-dom';\n/*\n    This toolbar is a functional React component that\n    manages the undo/redo/close buttons.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditToolbar() {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const history = useHistory();\n  let enabledButtonClass = \"playlister-button\";\n\n  function handleUndo() {\n    store.undo();\n  }\n\n  function handleRedo() {\n    store.redo();\n  }\n\n  function handleClose() {\n    history.push(\"/\");\n    store.closeCurrentList();\n  }\n\n  function handleAdd() {\n    store.addAddSongTransaction();\n  }\n\n  let canUndo = false;\n  let canRedo = false;\n  let canClose = false;\n  let canAdd = false;\n\n  if (store.currentList !== null) {\n    canUndo = store.hasUndo();\n    canRedo = store.hasRedo();\n    canClose = true;\n    canAdd = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    id: \"edit-toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"add-song-button\",\n      disabled: !canAdd,\n      value: \"+\",\n      className: enabledButtonClass,\n      onClick: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"undo-button\",\n      disabled: !canUndo,\n      value: \"\\u27F2\",\n      className: enabledButtonClass,\n      onClick: handleUndo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"redo-button\",\n      disabled: canRedo,\n      value: \"\\u27F3\",\n      className: enabledButtonClass,\n      onClick: handleRedo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"close-button\",\n      disabled: canClose,\n      value: \"\\u2715\",\n      className: enabledButtonClass,\n      onClick: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditToolbar, \"3pru+SYrs14w+1LSVfrX0yDmdFE=\", false, function () {\n  return [useHistory];\n});\n\n_c = EditToolbar;\nexport default EditToolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditToolbar\");","map":{"version":3,"sources":["/Users/kevin/Documents/CSE316/playerlister-hw3/Playlister_HW3/client/src/components/EditToolbar.js"],"names":["useContext","GlobalStoreContext","useHistory","EditToolbar","store","history","enabledButtonClass","handleUndo","undo","handleRedo","redo","handleClose","push","closeCurrentList","handleAdd","addAddSongTransaction","canUndo","canRedo","canClose","canAdd","currentList","hasUndo","hasRedo"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,UAAU,CAACC,kBAAD,CAA5B;AACA,QAAMI,OAAO,GAAGH,UAAU,EAA1B;AAEA,MAAII,kBAAkB,GAAG,mBAAzB;;AAEA,WAASC,UAAT,GAAsB;AAClBH,IAAAA,KAAK,CAACI,IAAN;AACH;;AACD,WAASC,UAAT,GAAsB;AAClBL,IAAAA,KAAK,CAACM,IAAN;AACH;;AACD,WAASC,WAAT,GAAuB;AACnBN,IAAAA,OAAO,CAACO,IAAR,CAAa,GAAb;AACAR,IAAAA,KAAK,CAACS,gBAAN;AACH;;AAED,WAASC,SAAT,GAAoB;AAChBV,IAAAA,KAAK,CAACW,qBAAN;AACH;;AAED,MAAIC,OAAO,GAAG,KAAd;AACA,MAAIC,OAAO,GAAG,KAAd;AACA,MAAIC,QAAQ,GAAG,KAAf;AACA,MAAIC,MAAM,GAAG,KAAb;;AACA,MAAGf,KAAK,CAACgB,WAAN,KAAsB,IAAzB,EAA8B;AAC1BJ,IAAAA,OAAO,GAAGZ,KAAK,CAACiB,OAAN,EAAV;AACAJ,IAAAA,OAAO,GAAGb,KAAK,CAACkB,OAAN,EAAV;AACAJ,IAAAA,QAAQ,GAAG,IAAX;AACAC,IAAAA,MAAM,GAAG,IAAT;AACH;;AAED,sBACI;AAAM,IAAA,EAAE,EAAC,cAAT;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,EAAE,EAAC,iBAFP;AAGI,MAAA,QAAQ,EAAE,CAACA,MAHf;AAII,MAAA,KAAK,EAAC,GAJV;AAKI,MAAA,SAAS,EAAEb,kBALf;AAMI,MAAA,OAAO,EAAEQ;AANb;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,EAAE,EAAC,aAFP;AAGI,MAAA,QAAQ,EAAE,CAACE,OAHf;AAII,MAAA,KAAK,EAAC,QAJV;AAKI,MAAA,SAAS,EAAEV,kBALf;AAMI,MAAA,OAAO,EAAEC;AANb;AAAA;AAAA;AAAA;AAAA,YATJ,eAiBI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,EAAE,EAAC,aAFP;AAGI,MAAA,QAAQ,EAAEU,OAHd;AAII,MAAA,KAAK,EAAC,QAJV;AAKI,MAAA,SAAS,EAAEX,kBALf;AAMI,MAAA,OAAO,EAAEG;AANb;AAAA;AAAA;AAAA;AAAA,YAjBJ,eAyBI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,EAAE,EAAC,cAFP;AAGI,MAAA,QAAQ,EAAES,QAHd;AAII,MAAA,KAAK,EAAC,QAJV;AAKI,MAAA,SAAS,EAAEZ,kBALf;AAMI,MAAA,OAAO,EAAEK;AANb;AAAA;AAAA;AAAA;AAAA,YAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH;;GAnEQR,W;UAEWD,U;;;KAFXC,W;AAqET,eAAeA,WAAf","sourcesContent":["import { useContext } from 'react'\nimport { GlobalStoreContext } from '../store'\nimport { useHistory } from 'react-router-dom'\n/*\n    This toolbar is a functional React component that\n    manages the undo/redo/close buttons.\n    \n    @author McKilla Gorilla\n*/\nfunction EditToolbar() {\n    const { store } = useContext(GlobalStoreContext);\n    const history = useHistory();\n\n    let enabledButtonClass = \"playlister-button\";\n\n    function handleUndo() {\n        store.undo();\n    }\n    function handleRedo() {\n        store.redo();\n    }\n    function handleClose() {\n        history.push(\"/\");\n        store.closeCurrentList();\n    }\n\n    function handleAdd(){\n        store.addAddSongTransaction();\n    }\n\n    let canUndo = false;\n    let canRedo = false;\n    let canClose = false;\n    let canAdd = false;\n    if(store.currentList !== null){\n        canUndo = store.hasUndo();\n        canRedo = store.hasRedo();\n        canClose = true;\n        canAdd = true;\n    }\n\n    return (\n        <span id=\"edit-toolbar\">\n            <input\n                type=\"button\"\n                id='add-song-button'\n                disabled={!canAdd}\n                value=\"+\"\n                className={enabledButtonClass}\n                onClick={handleAdd}\n            />\n            <input\n                type=\"button\"\n                id='undo-button'\n                disabled={!canUndo}\n                value=\"⟲\"\n                className={enabledButtonClass}\n                onClick={handleUndo}\n            />\n            <input\n                type=\"button\"\n                id='redo-button'\n                disabled={canRedo}\n                value=\"⟳\"\n                className={enabledButtonClass}\n                onClick={handleRedo}\n            />\n            <input\n                type=\"button\"\n                id='close-button'\n                disabled={canClose}\n                value=\"&#x2715;\"\n                className={enabledButtonClass}\n                onClick={handleClose}\n            />\n        </span>);\n}\n\nexport default EditToolbar;"]},"metadata":{},"sourceType":"module"}