{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/Documents/CSE316/playerlister-hw3/Playlister_HW3/client/src/components/SongCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SongCard(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [draggedTo, setDrag] = useState(false);\n\n  function handleDragStart(event) {\n    event.dataTransfer.setData(\"song\", event.target.id);\n  }\n\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  function handleDragEnter(event) {\n    event.preventDefault();\n    setDrag(true);\n  }\n\n  function handleDragLeave(event) {\n    event.preventDefault();\n    setDrag(false);\n  }\n\n  function handleDrop(event) {\n    event.preventDefault();\n    let target = event.target;\n    let targetId = target.id;\n    targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n    let sourceId = event.dataTransfer.getData(\"song\");\n    sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n    setDrag(false); // ASK THE MODEL TO MOVE THE DATA\n\n    store.addMoveSongTransaction(parseInt(sourceId), parseInt(targetId));\n  }\n\n  function handleRemove(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    store.showDeleteSongModal(index);\n  }\n\n  function handleEditSong(event) {}\n\n  const {\n    song,\n    index\n  } = props;\n  let cardClass = \"list-card unselected-list-card\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'song-' + index + '-card',\n    className: cardClass,\n    onDragStart: handleDragStart,\n    onDragOver: handleDragOver,\n    onDragEnter: handleDragEnter,\n    onDragLeave: handleDragLeave,\n    onDrop: handleDrop,\n    draggable: \"true\",\n    onDoubleClick: handleEditSong,\n    children: [index + 1, \".\", /*#__PURE__*/_jsxDEV(\"a\", {\n      id: 'song-' + index + '-link',\n      className: \"song-link\",\n      href: \"https://www.youtube.com/watch?v=\" + song.youTubeId,\n      children: [song.title, \" by \", song.artist]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"remove-song-\" + index,\n      className: \"list-card-button\",\n      value: \"\\u2715\",\n      onClick: handleRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SongCard, \"z59Ex7Hb9/FgGOrHJXJ9AuW8nxM=\");\n\n_c = SongCard;\nexport default SongCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongCard\");","map":{"version":3,"sources":["/Users/kevin/Documents/CSE316/playerlister-hw3/Playlister_HW3/client/src/components/SongCard.js"],"names":["React","useContext","useState","GlobalStoreContext","SongCard","props","store","draggedTo","setDrag","handleDragStart","event","dataTransfer","setData","target","id","handleDragOver","preventDefault","handleDragEnter","handleDragLeave","handleDrop","targetId","substring","indexOf","sourceId","getData","addMoveSongTransaction","parseInt","handleRemove","stopPropagation","showDeleteSongModal","index","handleEditSong","song","cardClass","youTubeId","title","artist"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\nimport { GlobalStoreContext } from '../store'\n\nfunction SongCard(props) {\n    const { store } = useContext(GlobalStoreContext);\n    const [draggedTo, setDrag] = useState(false);\n\n    function handleDragStart(event){\n        event.dataTransfer.setData(\"song\", event.target.id);\n    }\n    function handleDragOver(event) {\n        event.preventDefault();\n    }\n    function handleDragEnter(event){\n        event.preventDefault();\n        setDrag(true);\n    }\n    function handleDragLeave(event){\n        event.preventDefault();\n        setDrag(false);\n    }\n    function handleDrop(event){\n        event.preventDefault();\n        let target = event.target;\n        let targetId = target.id;\n        targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n        let sourceId = event.dataTransfer.getData(\"song\");\n        sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n        \n        setDrag(false);\n\n        // ASK THE MODEL TO MOVE THE DATA\n        store.addMoveSongTransaction(parseInt(sourceId), parseInt(targetId));\n    }\n\n    function handleRemove(event){\n        event.stopPropagation();\n        event.preventDefault();\n        store.showDeleteSongModal(index);\n        \n    }\n\n    function handleEditSong(event){\n        \n    }\n\n    const { song, index } = props;\n    let cardClass = \"list-card unselected-list-card\";\n    return (\n        <div\n            key={index}\n            id={'song-' + index + '-card'}\n            className={cardClass}\n            onDragStart={handleDragStart}\n            onDragOver={handleDragOver}\n            onDragEnter={handleDragEnter}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n            draggable=\"true\"\n            onDoubleClick={handleEditSong}\n        >\n            {index + 1}.\n            <a\n                id={'song-' + index + '-link'}\n                className=\"song-link\"\n                href={\"https://www.youtube.com/watch?v=\" + song.youTubeId}>\n                {song.title} by {song.artist}\n            </a>\n            <input\n                type=\"button\"\n                id={\"remove-song-\" + index}\n                className=\"list-card-button\"\n                value={\"\\u2715\"}\n                onClick={handleRemove}\n            />\n        </div>\n    );\n}\n\nexport default SongCard"]},"metadata":{},"sourceType":"module"}